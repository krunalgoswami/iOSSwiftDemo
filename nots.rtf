{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red170\green13\blue145;\red196\green26\blue22;
\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c77000\c10200\c8600;
\csgenericrgb\c11000\c0\c81000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0     \cf3 override\cf2  \cf3 func\cf2  clickRightBarButtonItem() \{\
        view.endEditing(\cf3 true\cf2 )\
        Utility.showAlert(\cf3 self\cf2 , title: \cf4 ""\cf2 , message: kAlert.Title.SelectSource, cancelButtonTitle: kAlert.Button.Cancel, otherButtonTitle: kAlert.Button.Camera, anotherButtonTitle: kAlert.Button.Library, alertStyle: .actionSheet) \{ (alertController, buttonIndex) \cf3 in\cf2 \
            \cf3 if\cf2  buttonIndex == \cf5 1\cf2 \{\
                \cf3 if\cf2 (UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.camera))\{\
                    Utility.checkCameraPermission \{\
                        \cf3 self\cf2 .imagePicker.sourceType = UIImagePickerControllerSourceType.camera\
                        \cf3 self\cf2 .imagePicker.delegate = \cf3 self\cf2 \
                        \cf3 self\cf2 .present(\cf3 self\cf2 .imagePicker, animated: \cf3 true\cf2 , completion: \cf3 nil\cf2 )\
                    \}\
                \}\cf3 else\cf2 \{\
                    Utility.showToastMessage(kToast.General.NotSupportCamera)\
                \}\
            \}\cf3 else\cf2  \cf3 if\cf2  buttonIndex == \cf5 2\cf2 \{\
                Utility.checkPhotoLibraryPermission \{\
                    \cf3 self\cf2 .imagePicker.sourceType = UIImagePickerControllerSourceType.photoLibrary\
                    \cf3 self\cf2 .imagePicker.delegate = \cf3 self\cf2 \
                    \cf3 self\cf2 .present(\cf3 self\cf2 .imagePicker, animated: \cf3 true\cf2 , completion: \cf3 nil\cf2 )\
                \}\
            \}\
        \}\
    \}\
}